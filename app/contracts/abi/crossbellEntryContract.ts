export const crossbellEntryContract = [
  {
    type: "error",
    name: "ErrCharacterNotExists",
    inputs: [{ type: "uint256", name: "characterId", internalType: "uint256" }],
  },
  { type: "error", name: "ErrHandleContainsInvalidCharacters", inputs: [] },
  { type: "error", name: "ErrHandleExists", inputs: [] },
  { type: "error", name: "ErrHandleLengthInvalid", inputs: [] },
  { type: "error", name: "ErrNotAddressOwner", inputs: [] },
  { type: "error", name: "ErrNotCharacterOwner", inputs: [] },
  { type: "error", name: "ErrNotEnoughPermission", inputs: [] },
  { type: "error", name: "ErrNotEnoughPermissionForThisNote", inputs: [] },
  { type: "error", name: "ErrNoteIsDeleted", inputs: [] },
  { type: "error", name: "ErrNoteLocked", inputs: [] },
  { type: "error", name: "ErrNoteNotExists", inputs: [] },
  { type: "error", name: "ErrSocialTokenExists", inputs: [] },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        type: "address",
        name: "owner",
        internalType: "address",
        indexed: true,
      },
      {
        type: "address",
        name: "approved",
        internalType: "address",
        indexed: true,
      },
      {
        type: "uint256",
        name: "tokenId",
        internalType: "uint256",
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        type: "address",
        name: "owner",
        internalType: "address",
        indexed: true,
      },
      {
        type: "address",
        name: "operator",
        internalType: "address",
        indexed: true,
      },
      { type: "bool", name: "approved", internalType: "bool", indexed: false },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      { type: "uint8", name: "version", internalType: "uint8", indexed: false },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      { type: "address", name: "from", internalType: "address", indexed: true },
      { type: "address", name: "to", internalType: "address", indexed: true },
      {
        type: "uint256",
        name: "tokenId",
        internalType: "uint256",
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "approve",
    inputs: [
      { type: "address", name: "to", internalType: "address" },
      { type: "uint256", name: "tokenId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "balanceOf",
    inputs: [{ type: "address", name: "owner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "burn",
    inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
    ],
    name: "createCharacter",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.CreateCharacterData",
        components: [
          { type: "address", name: "to", internalType: "address" },
          { type: "string", name: "handle", internalType: "string" },
          { type: "string", name: "uri", internalType: "string" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
    ],
    name: "createThenLinkCharacter",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.createThenLinkCharacterData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "address", name: "to", internalType: "address" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "deleteNote",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "uint256", name: "noteId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "getApproved",
    inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "",
        internalType: "struct DataTypes.Character",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "string", name: "handle", internalType: "string" },
          { type: "string", name: "uri", internalType: "string" },
          { type: "uint256", name: "noteCount", internalType: "uint256" },
          { type: "address", name: "socialToken", internalType: "address" },
          { type: "address", name: "linkModule", internalType: "address" },
        ],
      },
    ],
    name: "getCharacter",
    inputs: [{ type: "uint256", name: "characterId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "",
        internalType: "struct DataTypes.Character",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "string", name: "handle", internalType: "string" },
          { type: "string", name: "uri", internalType: "string" },
          { type: "uint256", name: "noteCount", internalType: "uint256" },
          { type: "address", name: "socialToken", internalType: "address" },
          { type: "address", name: "linkModule", internalType: "address" },
        ],
      },
    ],
    name: "getCharacterByHandle",
    inputs: [{ type: "string", name: "handle", internalType: "string" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "string", name: "", internalType: "string" }],
    name: "getCharacterUri",
    inputs: [{ type: "uint256", name: "characterId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "string", name: "", internalType: "string" }],
    name: "getHandle",
    inputs: [{ type: "uint256", name: "characterId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "getLinkModule4Address",
    inputs: [{ type: "address", name: "account", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "getLinkModule4ERC721",
    inputs: [
      { type: "address", name: "tokenAddress", internalType: "address" },
      { type: "uint256", name: "tokenId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "getLinkModule4Linklist",
    inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "getLinklistContract",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getLinklistId",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "bytes32", name: "linkType", internalType: "bytes32" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "bytes32", name: "", internalType: "bytes32" }],
    name: "getLinklistType",
    inputs: [{ type: "uint256", name: "linkListId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "string", name: "", internalType: "string" }],
    name: "getLinklistUri",
    inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "",
        internalType: "struct DataTypes.Note",
        components: [
          { type: "bytes32", name: "linkItemType", internalType: "bytes32" },
          { type: "bytes32", name: "linkKey", internalType: "bytes32" },
          { type: "string", name: "contentUri", internalType: "string" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "address", name: "mintModule", internalType: "address" },
          { type: "address", name: "mintNFT", internalType: "address" },
          { type: "bool", name: "deleted", internalType: "bool" },
          { type: "bool", name: "locked", internalType: "bool" },
        ],
      },
    ],
    name: "getNote",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "uint256", name: "noteId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getOperatorPermissions",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "address", name: "operator", internalType: "address" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address[]", name: "", internalType: "address[]" }],
    name: "getOperators",
    inputs: [{ type: "uint256", name: "characterId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "address[]", name: "blocklist", internalType: "address[]" },
      { type: "address[]", name: "allowlist", internalType: "address[]" },
    ],
    name: "getOperators4Note",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "uint256", name: "noteId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getPrimaryCharacterId",
    inputs: [{ type: "address", name: "account", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "pure",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getRevision",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "grantOperatorPermissions",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "address", name: "operator", internalType: "address" },
      { type: "uint256", name: "permissionBitMap", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "grantOperators4Note",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "uint256", name: "noteId", internalType: "uint256" },
      { type: "address[]", name: "blocklist", internalType: "address[]" },
      { type: "address[]", name: "allowlist", internalType: "address[]" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "initialize",
    inputs: [
      { type: "string", name: "name_", internalType: "string" },
      { type: "string", name: "symbol_", internalType: "string" },
      { type: "address", name: "linklist_", internalType: "address" },
      { type: "address", name: "mintNFTImpl_", internalType: "address" },
      { type: "address", name: "periphery_", internalType: "address" },
      { type: "address", name: "newbieVilla_", internalType: "address" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "bool", name: "", internalType: "bool" }],
    name: "isApprovedForAll",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "operator", internalType: "address" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "bool", name: "", internalType: "bool" }],
    name: "isOperatorAllowedForNote",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "uint256", name: "noteId", internalType: "uint256" },
      { type: "address", name: "operator", internalType: "address" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "bool", name: "", internalType: "bool" }],
    name: "isPrimaryCharacter",
    inputs: [{ type: "uint256", name: "characterId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "linkAddress",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.linkAddressData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "address", name: "ethAddress", internalType: "address" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
          { type: "bytes", name: "data", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "linkAnyUri",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.linkAnyUriData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "string", name: "toUri", internalType: "string" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
          { type: "bytes", name: "data", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "linkCharacter",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.linkCharacterData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "uint256", name: "toCharacterId", internalType: "uint256" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
          { type: "bytes", name: "data", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "linkERC721",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.linkERC721Data",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "address", name: "tokenAddress", internalType: "address" },
          { type: "uint256", name: "tokenId", internalType: "uint256" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
          { type: "bytes", name: "data", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "linkLinklist",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.linkLinklistData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "uint256", name: "toLinkListId", internalType: "uint256" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
          { type: "bytes", name: "data", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "linkNote",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.linkNoteData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "uint256", name: "toCharacterId", internalType: "uint256" },
          { type: "uint256", name: "toNoteId", internalType: "uint256" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
          { type: "bytes", name: "data", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "lockNote",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "uint256", name: "noteId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    name: "mintNote",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.MintNoteData",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "uint256", name: "noteId", internalType: "uint256" },
          { type: "address", name: "to", internalType: "address" },
          { type: "bytes", name: "mintModuleData", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "bytes[]", name: "results", internalType: "bytes[]" }],
    name: "multicall",
    inputs: [{ type: "bytes[]", name: "data", internalType: "bytes[]" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "string", name: "", internalType: "string" }],
    name: "name",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "ownerOf",
    inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "uint256", name: "noteId", internalType: "uint256" }],
    name: "postNote",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.PostNoteData",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "string", name: "contentUri", internalType: "string" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
          { type: "address", name: "mintModule", internalType: "address" },
          { type: "bytes", name: "mintModuleInitData", internalType: "bytes" },
          { type: "bool", name: "locked", internalType: "bool" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "postNote4Address",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.PostNoteData",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "string", name: "contentUri", internalType: "string" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
          { type: "address", name: "mintModule", internalType: "address" },
          { type: "bytes", name: "mintModuleInitData", internalType: "bytes" },
          { type: "bool", name: "locked", internalType: "bool" },
        ],
      },
      { type: "address", name: "ethAddress", internalType: "address" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "postNote4AnyUri",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.PostNoteData",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "string", name: "contentUri", internalType: "string" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
          { type: "address", name: "mintModule", internalType: "address" },
          { type: "bytes", name: "mintModuleInitData", internalType: "bytes" },
          { type: "bool", name: "locked", internalType: "bool" },
        ],
      },
      { type: "string", name: "uri", internalType: "string" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "postNote4Character",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.PostNoteData",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "string", name: "contentUri", internalType: "string" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
          { type: "address", name: "mintModule", internalType: "address" },
          { type: "bytes", name: "mintModuleInitData", internalType: "bytes" },
          { type: "bool", name: "locked", internalType: "bool" },
        ],
      },
      { type: "uint256", name: "toCharacterId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "postNote4ERC721",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.PostNoteData",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "string", name: "contentUri", internalType: "string" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
          { type: "address", name: "mintModule", internalType: "address" },
          { type: "bytes", name: "mintModuleInitData", internalType: "bytes" },
          { type: "bool", name: "locked", internalType: "bool" },
        ],
      },
      {
        type: "tuple",
        name: "erc721",
        internalType: "struct DataTypes.ERC721Struct",
        components: [
          { type: "address", name: "tokenAddress", internalType: "address" },
          { type: "uint256", name: "erc721TokenId", internalType: "uint256" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "postNote4Linklist",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.PostNoteData",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "string", name: "contentUri", internalType: "string" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
          { type: "address", name: "mintModule", internalType: "address" },
          { type: "bytes", name: "mintModuleInitData", internalType: "bytes" },
          { type: "bool", name: "locked", internalType: "bool" },
        ],
      },
      { type: "uint256", name: "toLinklistId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "postNote4Note",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.PostNoteData",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "string", name: "contentUri", internalType: "string" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
          { type: "address", name: "mintModule", internalType: "address" },
          { type: "bytes", name: "mintModuleInitData", internalType: "bytes" },
          { type: "bool", name: "locked", internalType: "bool" },
        ],
      },
      {
        type: "tuple",
        name: "note",
        internalType: "struct DataTypes.NoteStruct",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "uint256", name: "noteId", internalType: "uint256" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "resolver",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "safeTransferFrom",
    inputs: [
      { type: "address", name: "from", internalType: "address" },
      { type: "address", name: "to", internalType: "address" },
      { type: "uint256", name: "tokenId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "safeTransferFrom",
    inputs: [
      { type: "address", name: "from", internalType: "address" },
      { type: "address", name: "to", internalType: "address" },
      { type: "uint256", name: "tokenId", internalType: "uint256" },
      { type: "bytes", name: "_data", internalType: "bytes" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setApprovalForAll",
    inputs: [
      { type: "address", name: "operator", internalType: "address" },
      { type: "bool", name: "approved", internalType: "bool" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setCharacterUri",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "string", name: "newUri", internalType: "string" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setHandle",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "string", name: "newHandle", internalType: "string" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setLinkModule4Address",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.setLinkModule4AddressData",
        components: [
          { type: "address", name: "account", internalType: "address" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setLinkModule4Linklist",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.setLinkModule4LinklistData",
        components: [
          { type: "uint256", name: "linklistId", internalType: "uint256" },
          { type: "address", name: "linkModule", internalType: "address" },
          { type: "bytes", name: "linkModuleInitData", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setLinklistUri",
    inputs: [
      { type: "uint256", name: "linklistId", internalType: "uint256" },
      { type: "string", name: "uri", internalType: "string" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setMintModule4Note",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.setMintModule4NoteData",
        components: [
          { type: "uint256", name: "characterId", internalType: "uint256" },
          { type: "uint256", name: "noteId", internalType: "uint256" },
          { type: "address", name: "mintModule", internalType: "address" },
          { type: "bytes", name: "mintModuleInitData", internalType: "bytes" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setNoteUri",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "uint256", name: "noteId", internalType: "uint256" },
      { type: "string", name: "newUri", internalType: "string" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setPrimaryCharacterId",
    inputs: [{ type: "uint256", name: "characterId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setSocialToken",
    inputs: [
      { type: "uint256", name: "characterId", internalType: "uint256" },
      { type: "address", name: "tokenAddress", internalType: "address" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "bool", name: "", internalType: "bool" }],
    name: "supportsInterface",
    inputs: [{ type: "bytes4", name: "interfaceId", internalType: "bytes4" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "string", name: "", internalType: "string" }],
    name: "symbol",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "tokenByIndex",
    inputs: [{ type: "uint256", name: "index", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "tokenOfOwnerByIndex",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "uint256", name: "index", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "string", name: "", internalType: "string" }],
    name: "tokenURI",
    inputs: [{ type: "uint256", name: "characterId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "totalSupply",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "transferFrom",
    inputs: [
      { type: "address", name: "from", internalType: "address" },
      { type: "address", name: "to", internalType: "address" },
      { type: "uint256", name: "tokenId", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "unlinkAddress",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.unlinkAddressData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "address", name: "ethAddress", internalType: "address" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "unlinkAnyUri",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.unlinkAnyUriData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "string", name: "toUri", internalType: "string" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "unlinkCharacter",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.unlinkCharacterData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "uint256", name: "toCharacterId", internalType: "uint256" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "unlinkERC721",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.unlinkERC721Data",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "address", name: "tokenAddress", internalType: "address" },
          { type: "uint256", name: "tokenId", internalType: "uint256" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "unlinkLinklist",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.unlinkLinklistData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "uint256", name: "toLinkListId", internalType: "uint256" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
        ],
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "unlinkNote",
    inputs: [
      {
        type: "tuple",
        name: "vars",
        internalType: "struct DataTypes.unlinkNoteData",
        components: [
          { type: "uint256", name: "fromCharacterId", internalType: "uint256" },
          { type: "uint256", name: "toCharacterId", internalType: "uint256" },
          { type: "uint256", name: "toNoteId", internalType: "uint256" },
          { type: "bytes32", name: "linkType", internalType: "bytes32" },
        ],
      },
    ],
  },
] as const;
